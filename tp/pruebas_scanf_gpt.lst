     1                                  global main
     2                                  extern gets
     3                                  extern printf
     4                                  extern sscanf
     5                                  
     6                                  section .data
     7 00000000 557374656420696E67-         msj		db	'Usted ingreso %s !!',10,0
     7 00000009 7265736F2025732021-
     7 00000012 210A00             
     8 00000015 557374656420696E67-         msj2		db	'Usted ingreso %li !!',10,0
     8 0000001E 7265736F20256C6920-
     8 00000027 21210A00           
     9 0000002B 256C6900                    format	db	'%li',0
    10 0000002F 313400                      input       db          "14",0
    11                                  
    12                                  section .bss
    13 00000000 ????????????????            numero resq 1          ; Reservar espacio para un número
    14                                  
    15                                  section .text
    16                                  main:
    17 00000000 4883EC08                    sub rsp, 8            ; Alinear el stack para las convenciones de llamada
    18                                  
    19                                      ; Imprimir el mensaje inicial
    20 00000004 48BF-                       mov rdi, msj
    20 00000006 [0000000000000000] 
    21 0000000E 48BE-                       mov rsi, input
    21 00000010 [2F00000000000000] 
    22 00000018 E8(00000000)                call printf
    23                                      
    24                                      ; Llamar a sscanf para convertir el input en octal
    25 0000001D 48BF-                       mov rdi, input        ; Primer parámetro: cadena de entrada
    25 0000001F [2F00000000000000] 
    26 00000027 48BE-                       mov rsi, format       ; Segundo parámetro: formato
    26 00000029 [2B00000000000000] 
    27 00000031 488D1425[00000000]          lea rdx, [numero]     ; Tercer parámetro: dirección de 'numero'
    28 00000039 E8(00000000)                call sscanf
    29                                  
    30                                      ; Imprimir el resultado en formato octal
    31 0000003E 48BF-                       mov rdi, msj2
    31 00000040 [1500000000000000] 
    32 00000048 488B3425[00000000]          mov rsi, [numero]     ; Cargar el valor de 'numero' para printf
    33 00000050 E8(00000000)                call printf
    34                                      
    35 00000055 4883C408                    add rsp, 8            ; Restaurar alineación del stack
    36 00000059 C3                          ret
